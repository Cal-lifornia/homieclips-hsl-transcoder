package hls_converter

var getResolutionCommand = `ffprobe -v error -select_streams v -show_entries stream=width,height -of json %s`

var ffmpegCommand2160P = `ffmpeg
-i
%s
-filter_complex
[0:v]split=3[v1][v2][v3]; [v1]copy[v1out]; [v2]scale=w=2560:h=1440[v2out]; [v3]scale=w=1920:h=1080[v3out]
-map
[v1out]
-c:v:0
libx264
-x264-params
nal-hrd=cbr:force-cfr=1
-b:v:0
20M
-maxrate:v:0
25M
-minrate:v:0
15M
-bufsize:v:0
20
-preset
slow
-g
48
-sc_threshold
0
-keyint_min
48
-map
[v2out]
-c:v:1
libx264
-x264-params
nal-hrd=cbr:force-cfr=1
-b:v:1
10M
-maxrate:v:1
15M
-minrate:v:1
10M
-bufsize:v:1
10M
-preset
slow
-g
48
-sc_threshold
0
-keyint_min
48
-map
[v3out]
-c:v:2
libx264
-x264-params
nal-hrd=cbr:force-cfr=1
-b:v:2
5M
-maxrate:v:2
5M
-minrate:v:2
5M
-bufsize:v:2
5M
-preset
slow
-g
48
-sc_threshold
0
-keyint_min
48
-map
a:0
-c:a:0
aac
-b:a:0
96k
-ac
2
-map
a:0
-c:a:1
aac
-b:a:1
96k
-ac
2
-map
a:0
-c:a:2
aac
-b:a:2
48k
-ac
2
-f
hls
-hls_time
2
-hls_playlist_type
vod
-hls_flags
independent_segments
-hls_segment_type
mpegts
-hls_segment_filename
%s_%%v_data%%02d.ts
-master_pl_name
%s_master.m3u8
-var_stream_map
v:0,a:0 v:1,a:1 v:2,a:2
%s_%%v.m3u8`
